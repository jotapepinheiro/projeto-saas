version: '3.8'

services:

  #  tunnel:
  #    container_name: ${CONTAINER_NAME}-tunnel
  #    build:
  #      context: ./docker/tunnel
  #    stdin_open: true
  #    tty: true
  #    restart: always
  #    ports:
  #      - "${DB_PORT_PLATFORM}:3306"
  #    deploy:
  #      resources:
  #        limits:
  #          cpus: 1
  #          memory: 1G
  #    environment:
  #      - "DB_HOST_TUNNEL=${DB_HOST_TUNNEL}"
  #      - "DB_PORT_TENANCY=${DB_PORT_TENANCY}"

  php-fpm:
    container_name: ${CONTAINER_NAME}-php
    build:
      context: ./docker/php-fpm
      args:
        - INSTALL_PHPREDIS=${INSTALL_PHPREDIS}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        - INSTALL_APCU=${INSTALL_APCU}
        - INSTALL_OPCACHE=${INSTALL_OPCACHE}
    restart: always
    deploy:
      resources:
        limits:
          cpus: 9
          memory: 3G
    volumes:
      - .:/var/www/loja:delegated
      - ${XDEBUG_LOG_PATH}:/var/log:delegated
    environment:
      XDEBUG_CONFIG: remote_host=${DOCKER_REMOTE_HOST}
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend
  #    depends_on:
  #      - tunnel

  mysql:
    container_name: ${CONTAINER_NAME}-mysql
    build:
      context: ./docker/mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      TZ: ${CONTAINER_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql:delegated
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT}:3306"
    networks:
      - backend

  nginx:
    container_name: ${CONTAINER_NAME}-nginx
    build:
      context: ./docker/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - CONTAINER_DOMAIN=${CONTAINER_DOMAIN}
        - http_proxy
        - no_proxy
    restart: always
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2G
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    volumes:
      - .:/var/www/loja:delegated
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available:delegated
      - ${NGINX_LOG_PATH}:/var/log/nginx:delegated
    depends_on:
      - php-fpm
    networks:
      - backend

  redis:
    container_name: ${CONTAINER_NAME}-redis
    build:
      context: ./docker/redis
    restart: always
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 1G
    volumes:
      - ${DATA_PATH_HOST}/redis:/data:delegated
      - ${REDIS_LOG_PATH}:/var/log/redis:delegated
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    depends_on:
      - php-fpm
    networks:
      - backend

  redis-webui:
    container_name: ${CONTAINER_NAME}-redis-webui
    build:
      context: ./docker/redis-webui
    restart: always
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 1G
    environment:
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
      - REDIS_1_AUTH=${REDIS_PASSWORD}
      - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
      - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis
    networks:
      - backend

networks:
  backend:
    driver: bridge
